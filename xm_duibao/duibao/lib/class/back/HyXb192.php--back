<?php
/*
 * 下载任务的完成--status=2
 */

class HyXb192 extends HyXb{
	
	private $taskid;//下载任务id
	
	//数据的初始化
	function __construct($input_data){
	
		//数据初始化
		parent::__construct($input_data);
	
		//日志数据开始写入
		$tmp_logstr   = "\n".'BEGINXB--------------------BEGIN--------------------BEGIN'."\n".
				date('Y-m-d H:i:s').'    request_uri:    '.$_SERVER["REQUEST_URI"]."\n".
				HyItems::hy_array2string($input_data)."\n";
		parent::hy_log_str_add($tmp_logstr);
		unset($tmp_logstr);
	
		$this->taskid = isset($input_data['taskid'])? $input_data['taskid']:'';  //下载任务id
	
	}
	
	
	//任务完成
	public function controller_finishdownloadscore(){
		
		//获取用户的类型
		$usertype = parent::__get('xb_usertype');
		
		$temparr = array(
				array(
						'status' => '2'
				)
		);
		
		//更新任务表中该任务的下载次数
		$updatetasksql  = "update xb_task set downtimes = downtimes+1 where id='".$this->taskid."'";
		$updatetasklist = parent::__get('HyDb')->execute($updatetasksql);
		
		
		if($updatetasklist){
			
			if($usertype=='1'){//正式用户
				
				//更新用户表中的数据
				$updateusertask = "update xb_user_task set status='2' where userid='".parent::__get('xb_userid')."' and taskid='".$this->taskid."' order by id desc limit 1";
				$updateusertasklist = parent::__get('HyDb')->execute($updateusertask);
				
				if($updateusertasklist){
					$echoarr = array();
					$echoarr['returncode'] = 'success';
					$echoarr['returnmsg']  = '游戏下载成功';
					$echoarr['dataarr'] = $temparr;
					$logstr = $echoarr['returncode'].'-----'.$echoarr['returnmsg']."\n"; //日志写入
					parent::hy_log_str_add($logstr);
					echo json_encode($echoarr);
					return true;
				}else{
					$echoarr = array();
					$echoarr['returncode'] = 'error';
					$echoarr['returnmsg']  = '游戏下载失败';
					$echoarr['dataarr'] = array();
					$logstr = $echoarr['returncode'].'-----'.$echoarr['returnmsg']."\n"; //日志写入
					parent::hy_log_str_add($logstr);
					echo json_encode($echoarr);
					return false;
				}
				
				
			}else if($usertype=='2'){
					
				//更新用户表中的数据
				$updateusertask = "update xb_temp_user_task set status='2' where userid='".parent::__get('xb_userid')."' and taskid='".$this->taskid."' order by id desc limit 1";
				$updateusertasklist = parent::__get('HyDb')->execute($updateusertask);
					
				if($updateusertasklist){
					$echoarr = array();
					$echoarr['returncode'] = 'success';
					$echoarr['returnmsg']  = '游戏下载成功';
					$echoarr['dataarr'] = $temparr;
					$logstr = $echoarr['returncode'].'-----'.$echoarr['returnmsg']."\n"; //日志写入
					parent::hy_log_str_add($logstr);
					echo json_encode($echoarr);
					return true;
				}else{
					$echoarr = array();
					$echoarr['returncode'] = 'error';
					$echoarr['returnmsg']  = '游戏下载失败';
					$echoarr['dataarr'] = array();
					$logstr = $echoarr['returncode'].'-----'.$echoarr['returnmsg']."\n"; //日志写入
					parent::hy_log_str_add($logstr);
					echo json_encode($echoarr);
					return false;
				}
			}else{
				
				$echoarr = array();
				$echoarr['returncode'] = 'error';
				$echoarr['returnmsg']  = '该用户传递的用户类型参数错误，用户任务下载失败！';
				$echoarr['dataarr'] = array();
				$logstr = $echoarr['returncode'].'-----'.$echoarr['returnmsg']."\n"; //日志写入
				parent::hy_log_str_add($logstr);
				echo json_encode($echoarr);
				return false;
			}
			
		}else{
			$echoarr = array();
			$echoarr['returncode'] = 'error';
			$echoarr['returnmsg']  = '任务表中游戏的下载次数更新失败';
			$echoarr['dataarr'] = array();
			$logstr = $echoarr['returncode'].'-----'.$echoarr['returnmsg']."\n"; //日志写入
			parent::hy_log_str_add($logstr);
			echo json_encode($echoarr);
			return false;
		}
		
		
	}
	
	
	
	
	
	//操作入口--下载任务的完成
	public function controller_init(){
	
		//基本参数的判断,md5key判断，时间戳的判断
		$r = parent::func_base_check();
	
		if($r===false){
	
			return false;
		}
	
		//操作类型的判断
		if(parent::__get('xb_thetype')!='192'){
			$echoarr = array();
			$echoarr['returncode'] = 'error';
			$echoarr['returnmsg']  = '操作类型错误';
			$echoarr['dataarr']    = array();
			$logstr = $echoarr['returncode'].'-----'.$echoarr['returnmsg']."\n"; //日志写入
			parent::hy_log_str_add($logstr);
			echo json_encode($echoarr);
			return false;
		}
	
		$shuzu = array('1','2');
	
		if(!in_array(parent::__get('xb_usertype'),$shuzu)){
	
			$echoarr = array();
			$echoarr['returncode'] = 'error';
			$echoarr['returnmsg']  = '该用户传递的用户类型参数错误，任务下载失败';
			$echoarr['dataarr']    = array();
			$logstr = $echoarr['returncode'].'-----'.$echoarr['returnmsg']."\n"; //日志写入
			parent::hy_log_str_add($logstr);
			echo json_encode($echoarr);
			return false;
		}
		
		//任务taskid的判断
		if($this->taskid==''){
			$echoarr = array();
			$echoarr['returncode'] = 'error';
			$echoarr['returnmsg']  = '传递的任务id为空';
			$echoarr['dataarr']    = array();
			$logstr = $echoarr['returncode'].'-----'.$echoarr['returnmsg']."\n"; //日志写入
			parent::hy_log_str_add($logstr);
			echo json_encode($echoarr);
			return false;
		}
		
	
	
	
		//下载任务的开始的入口
		$this->controller_finishdownloadscore();
	
		return true;
	}
	
}